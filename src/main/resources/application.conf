
gen {
  # The available products bought
  products="Data plan normal;Data plan extra;Data plan world;"

  # A JSON file containing countries, MCC, MNC
  countries.file="/mcc-mnc-table.json"

  # Threaded, a threaded program will output more data, if the machine has a multicore processor.
  threaded="no"

  # This application will use cassandra/cql batches to send CDRs.
  # A size for how much the client will collect before it will send to cassandra
  cassandra.element.batch.size=50

  # Number of batches to generate before exiting. -1 for infinity.
  batch.limit=-1

  # What is the probability that the user is using roaming? 0.25 for 25%
  roaming.change="0.25"

  # Max number to generate amount (0-Max)
  cassandra.element.amount.max=1000

  # Scale up or scale down the amount of cdrs generated (1 for realistic values)
  modifier=0.001

  # Total amount of hours to generate back in time
  backintime=48
}

cassandra {
  # Ip where cassandra can be found
  ip="127.0.0.1"

  # Port where cassandra can be found
  port="9042"

  # Username of connection
  username="cassandra"

  # Password of connection
  password="cassandra"

  # Keyspace that we are using for cassandra
  keyspace="qvantel"

  # Table name to input to
  cdrTable="cdr"
}

kamon {
  metric {
    tick-interval = 10 second
  }

  statsd {
    # Hostname and port in which your StatsD is running. Remember that StatsD packets are sent using UDP and
    # setting unreachable hosts and/or not open ports wont be warned by the Kamon, your data wont go anywhere.
    hostname = "127.0.0.1"
    port = 8125

    # Interval between metrics data flushes to StatsD. It's value must be equal or greater than the
    # kamon.metrics.tick-interval setting.
    flush-interval = 10 second

    # Max packet size for UDP metrics data sent to StatsD.
    max-packet-size = 1024 bytes

    simple-metric-key-generator {
      # Application prefix for all metrics pushed to StatsD. The default namespacing scheme for metrics follows
      # this pattern:
      #    application.host.entity.entity-name.metric-name
      application = "generator"
      include-hostname = false
    }

    modules {
      kamon-statsd.auto-start = no
      kamon-log-reporter.auto-start = no
    }
  }
}
